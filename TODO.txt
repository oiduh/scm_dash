TODO:
    - [X] find double textarea bug
    - [X] mechanism -> data generation process
        - [X] gather root nodes
        - [X] generate data for root nodes
        - [X] gather all in node data -> noise + processed data
        - [X] repeat for rest of nodes
        - [X] tests for pipeline
        - [X] replace one hot encoding -> can be done later
    - [X] revise mechanism
    - [X] remove unnecassary asserts
    - [X] graph builder design
        - [X] remove
        - [X] handle instead
        - [X] exceptions + handling instead, or error
    - [X] randint distribution bug -> not updting
    - [X] fix callbacks after refactor
	- [X] fix slider visual bug -> only on laptop?
	- [X] in accordion only focus on ONE open
    - [X] fix graph builder accordion on startup -> not updating correctly
        when multiple node on refresh
    - [X] distr sliders
        - [X] depending on distr -> limits
    - [X] logger
	- [X] graph view
		- [X] dropdown for node arrangement + save
		- [X] add 'more' layouts -> loading possible
		- [X] title; display current choice
		- [X] find a way to center + spread all layout
		-> remove 'ugly' layouts (not centered)
    - [X] distr view
        - [X] dropdown for choice (right side)
        - [X] variable change -> immediate update -> slider change (on release, not hold)
    - [X] add seed fixed seed for each data generation function


    - [X] mechanism (default mapping for instant data generation)
		- [X] default regression -> id noise instead of placeholder
        - [X] default classification (all 1 class)
    - [ ] mechanism choice confirmation
        - [ ] left
            - [X] confirm button
            - [ ] confirm callback -> sample data + verification
        - [ ] right
            - [ ] formula display + info about confirmation (confirm only on left side)
            -> full formula needed e.g. z = f(x,y,n_z) = x + y + 0.5*n_z
                - [X] regression -> only 1
                - [ ] classification -> multiple (depending on class)
            - [ ] lock button -> if all confirmed -> unlock button if locked
            - [ ] generate data on lock
        - [ ] disable graph and noise and left mechanism on lock
    - [ ] new tab -> summary + target/source node selection

    - [ ] one last rework
        - [ ] left
            - [ ] dropdown for available variables
                - [ ] graph -> rework
                    - [X] add node
                    - [ ] remove node -> at least one remains
                    - [X] add out node
                    - [X] remove edge
                    - [X] design, proper display
                    - [X] show graph on startup
                    -> problem with no layer on startup
                    - [X] graph layout callback
                - [ ] noise -> accordion for each sub-noise
                    - [X] same selection bar as 'graph'
                    - [X] simple builder -> as little dict ids as possible
                    - [X] builder
                        - [X] change distribution type
                        - [X] add sub variable
                        - [X] remove selected sub variable -> at least 1 remains
                        - [X] input callback
                            - [X] min
                            - [X] max
                            - [X] value
                        - [X] slider callback
                    - [ ] viewer
                    - [ ] apply callbacks also to graph stuff -> adding variables to selector
                - [ ] mechanism
                    - [ ] confirm button for each variable
                    - [ ] lock button at top -> confirm all and lock if OK (toggle unlock)
            - [ ] button to add variable
            - [ ] button to remove variable

	- [ ] graph state as file
    -> simple json
		- [ ] export import from meta files
		-> no exact data points, just meta data for generation + seed
		-> export/save files (reproducible results)
		- [ ] import feature -> parser + validation
	- [ ] info/help for mechanism
		- [ ] how to use e.g. numpy standard
        - [ ] available mathematical functions
		- [ ] which variables available
	- [ ] mechanism layout
		- [ ] show info button main + highlight
		- [ ] overall design
			- [ ] mechanism choice
			- [ ] variables highlighted
			- [ ] mechanism input
	- [ ] mechanism feedback
		- [ ] confirm mechanism -> which variables affected
		-> no detailed feedback (overkill)
		- [ ] flag for confirmation of all variables (for summary)
    - [ ] summary view
	-> needs confirmed and valid mechanism
		- [ ] dag
			- [ ] all nodes and edges 
			- [ ] hover node -> noise
			- [ ] hover edge -> mechansim (text)
		- [ ] confirm base graph -> exportable data + metadata
	- [ ] intervention
	-> needs base metadata
	-> multiple iteration possible (1 base, multiple interventions)
	-> at least one variable needs to be intervened on
	-> intervention = constant for variable (no distr)


ideas for mechanism view:
    - check list -> which mechanisms are correct, which are not
    - display mechanism/function in a nice way

after mechanism done:
    - lock in scm -> evaluate mechanisms and generate data
    - if date is successfully generated -> enable new window
    - else generic message to check mechansims

next window:
    - data view
    - dimensionality reduction of whole data
    - pairwise correlation view

next window:
    - select target variable
    - select source variables (all by default -> enables to ignore potential problem vars)
