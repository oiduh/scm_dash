TODO:
    - [X] find double textarea bug
    - [X] mechanism -> data generation process
        - [X] gather root nodes
        - [X] generate data for root nodes
        - [X] repeat for rest of nodes
        - [X] tests for pipeline
        - [X] replace one hot encoding -> can be done later
    - [X] revise mechanism
    - [X] remove unnecassary asserts
    - [X] graph builder design
        - [X] remove
        - [X] handle instead
        - [X] exceptions + handling instead, or error
    - [X] randint distribution bug -> not updting
    - [X] fix callbacks after refactor
	- [X] fix slider visual bug -> only on laptop?
	- [X] in accordion only focus on ONE open
    - [X] fix graph builder accordion on startup -> not updating correctly
        when multiple node on refresh
    - [X] distr sliders
        - [X] depending on distr -> limits
    - [X] logger
	- [X] graph view
		- [X] dropdown for node arrangement + save
		- [X] add 'more' layouts -> loading possible
		- [X] title; display current choice
		- [X] find a way to center + spread all layout
		-> remove 'ugly' layouts (not centered)
    - [X] distr view
        - [X] dropdown for choice (right side)
        - [X] variable change -> immediate update -> slider change (on release, not hold)
    - [X] add seed fixed seed for each data generation function


    - [X] mechanism (default mapping for instant data generation)
		- [X] default regression -> id noise instead of placeholder
        - [X] default classification (all 1 class)
    - [ ] mechanism choice confirmation
        - [ ] left
            - [X] confirm button
            - [ ] confirm callback -> sample data + verification
        - [ ] right
            - [ ] formula display + info about confirmation (confirm only on left side)
            -> full formula needed e.g. z = f(x,y,n_z) = x + y + 0.5*n_z
                - [X] regression -> only 1
                - [ ] classification -> multiple (depending on class)
            - [ ] lock button -> if all confirmed -> unlock button if locked
            - [ ] generate data on lock
        - [ ] disable graph and noise and left mechanism on lock
    - [ ] new tab -> summary + target/source node selection

    - [X] one last rework
        - [X] lexer + parser for formulas 
            - [X] google if simple grammar module available
            - [X] use ply and extend simple calc example
            - [X] some simple test cases with numpy
            - [X] find out if result can be returned
            -> not really, but does not matter
            - [X] include in mechanism confirmation
        - [X] left
            - [X] dropdown for available variables
                - [X] graph -> rework
                    - [X] add node
                    - [X] remove node -> at least one remains + bug fix
                    - [X] add out node
                    - [X] remove edge
                    - [X] design, proper display
                    - [X] show graph on startup
                    -> problem with no layer on startup
                    - [X] graph layout callback
                    - [X] rename function
                        - [X] correct backend
                        -> must be unique name across all variables
                        -> cannot have same name as id
                        -> must start with letter
                        -> cannot exceed e.g. 16 letters
                        - [X] display if avaialable (with id in paren)
                    - [X] callback logs
                - [X] noise -> accordion for each sub-noise
                    - [X] same selection bar as 'graph'
                    - [X] simple builder -> as little dict ids as possible
                    - [X] builder
                        - [X] change distribution type
                        - [X] add sub variable
                        - [X] remove selected sub variable -> at least 1 remains
                        - [X] input callback
                            - [X] min
                            - [X] max
                            - [X] value
                        - [X] slider callback
                    - [X] viewer
                        -> rethink whole process:
                        -> generating new data for each mininal change too much?
                        -> test how quick this works
                        -> how to display distribution and sub distribution separately and nicely
                        -> new final idea: return all sub distributions indidually and process them
                           when creating the view
                           we should have 2 graphs: 1 combined (all) and 1 with individuals where
                           only the selected has a different color
                    - [X] apply callbacks also to graph stuff -> adding variables to selector
                    - [X] callback logs
                    - [X] fix tests
                - [ ] mechanism
                    - [X] builder
                        - [X] variable selection (similar to others)
                        - [X] mechanism type
                        - [X] mechanism config
                            - [X] view regression
                            -> should be same as previously
                            - [X] view classification
                            - [X] callbacks 
                                - [X] select variable
                                - [X] select mechanism type
                                - [X] classification - add class
                                - [X] classification - remove class
                                -> at least one class should remain
                                - [X] check formula button
                                -> no individual checks for classification
                                -> change viewer errors if any occur
                                -> display currently confirmed formulas on right
                                   on the left editable version
                                -> confirm also saves the formula from the input
                    - [X] viewer per variable chosen on builder
                        - [X] display initial formulas
                        -> problem with names vs ids
                        -> generally if name availble, use name else id_
                        -> initial values removed, instead add help functionality
                        - [X] latexify formulas
                        -> simple replace or utils function with sympy
                            - [X] fix equals operator for latex
                            -> sympy evaluates by simplifying, but we do not want that
                            -> use parse_expr with param evaluate=False
                            - [X] latexify whole markdown text, not just the formula
                            - [X] also for regression
                        - [X] add help functionality e.g. tooltip
                            - [X] button
                            - [X] collapsible content
                            - [X] toggle callback
                            - [X] useful info 
                            -> available variables (maybe no toggle but fixed)
                            -> all functions
                            -> difference between reg and class
                        - [X] update on each confirm (correct)
                        - [X] display errors

    - [ ] data gen tab
        -> no callbacks from previous tabs -> simple
        - [ ] lock button -> success if data generated correctly
            - [X] lock generates data
            - [ ] if fails -> feedback (only mechanism can fail)
            - [X] if success -> lock previous tabs, button becomes unlock, tabs unlocked
        - [X] new dummy tabs for locked graph -> locked initially, unlocked by button
        - [ ] viewer just shows success or fail
        -> main task is locking tabs and generating data
        

    - [ ] fixes
        - [ ] graph
            - [X] respect the maximum size of the defaults
            -> reproduce: max out slider and then change -> result: cannot go back to default max (uniform)
            - [ ] all distribution types update short description about parameters
            - [ ] general distributions
            -> instead of making 'random' values for limit to some uniform values
            -> scaling can be done in the mechanism part
            -> need to know which variables to limit, which not
            -> might be useful for uniform distribution where we can just keep a constant

	- [ ] graph state as file
    -> simple json
		- [ ] export import from meta files
		-> no exact data points, just meta data for generation + seed
		-> export/save files (reproducible results)
		- [ ] import feature -> parser + validation
	- [ ] info/help for mechanism
		- [ ] how to use e.g. numpy standard
        - [ ] available mathematical functions
		- [ ] which variables available
	- [ ] mechanism layout
		- [ ] show info button main + highlight
		- [ ] overall design
			- [ ] mechanism choice
			- [ ] variables highlighted
			- [ ] mechanism input
	- [ ] mechanism feedback
		- [ ] confirm mechanism -> which variables affected
		-> no detailed feedback (overkill)
		- [ ] flag for confirmation of all variables (for summary)
    - [ ] summary view
	-> needs confirmed and valid mechanism
		- [ ] dag
			- [ ] all nodes and edges 
			- [ ] hover node -> noise
			- [ ] hover edge -> mechansim (text)
		- [ ] confirm base graph -> exportable data + metadata
	- [ ] intervention
	-> needs base metadata
	-> multiple iteration possible (1 base, multiple interventions)
	-> at least one variable needs to be intervened on
	-> intervention = constant for variable (no distr)


ideas for mechanism view:
    - check list -> which mechanisms are correct, which are not
    - display mechanism/function in a nice way

after mechanism done:
    - lock in scm -> evaluate mechanisms and generate data
    - if date is successfully generated -> enable new window
    - else generic message to check mechansims

next window:
    - data view
    - dimensionality reduction of whole data
    - pairwise correlation view

next window:
    - select target variable
    - select source variables (all by default -> enables to ignore potential problem vars)
